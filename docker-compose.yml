version: "3.8"
services:

  # NEO приватная нода для локальной разработки
  neo-node:
    image: nspccdev/neo-go
    container_name: neo-node
    command: [
      "node", 
      "--network=priv", 
      "--rpc",
      "--rpc-port=20332",
      "--wallet", "/neo-go/configs/wallet.json",
      "--unlock", "address_in_wallet",
      "--wallet-password", "pass"
    ]
    ports:
      - "20332:20332"
    volumes:
      - ./neo-config:/neo-go/configs

  # FrostFS (локальный dev-кластер или удаленный endpoint)
  # Для примера укажем некий самопальный образ, 
  # в реальности нужна полноценная конфигурация.
  frostfs:
    image: yourorg/frostfs-dev
    container_name: frostfs
    ports:
      - "8080:8080"
    environment:
      - SOME_ENV=...
    # ...

  # Сервис для загрузки в FrostFS
  frostfs-uploader:
    build: 
      context: ./services/frostfs-uploader
    container_name: frostfs-uploader
    environment:
      - FROSTFS_ENDPOINT=grpcs://frostfs:8080
      - FROSTFS_PRIVKEY=... # dev key
      - FROSTFS_CONTAINER_ID=... # dev container ID
    ports:
      - "8081:8081"
    depends_on:
      - frostfs

  # API-сервис
  api:
    build:
      context: ./services/api
    container_name: onlyfans-api
    environment:
      - NEO_RPC_ENDPOINT=http://neo-node:20332
      - NEO_WALLET_PATH=/app/wallets/dev.wallet.json
      - NEO_WALLET_PASS=somepass
      - NFT_CONTRACT_HASH=bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb
      - MARKET_CONTRACT_HASH=cccccccccccccccccccccccccccccccccccccccc
    volumes:
      - ./services/api/wallets:/app/wallets
    ports:
      - "8080:8080"
    depends_on:
      - neo-node

  # Фронтенд
  frontend:
    build:
      context: ./frontend
    container_name: onlyfans-frontend
    ports:
      - "3000:3000"
    depends_on:
      - api
      - frostfs-uploader
